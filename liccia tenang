#include <iostream>
#include <fstream>
#include <vector>
#include <string>

using namespace std;

// Fungsi untuk membaca tugas dari file
vector<string> loadTasks() {
    vector<string> tasks;
    ifstream file("todo.txt");
    string line;
    while (getline(file, line)) {
        tasks.push_back(line);
    }
    file.close();
    return tasks;
}

// Fungsi untuk menyimpan tugas ke file
void saveTasks(const vector<string>& tasks) {
    ofstream file("todo.txt");
    for (int i = 0; i < tasks.size(); i++) {
        file << tasks[i] << endl;
    }
    file.close();
}

// Fungsi untuk menampilkan semua tugas
void listTasks(const vector<string>& tasks) {
    cout << "\nDaftar Tugas:\n";
    for (int i = 0; i < tasks.size(); i++) {
        cout << i + 1 << ". " << tasks[i] << endl;
    }
}

int main() {
    vector<string> tasks = loadTasks();
    string command;

    while (true) {
        cout << "\nPerintah (add/list/done/exit): ";
        cin >> command;

        if (command == "add") {
            cin.ignore();
            string newTask;
            cout << "Masukkan tugas: ";
            getline(cin, newTask);
            tasks.push_back("[ ] " + newTask);
            saveTasks(tasks);
        }
        else if (command == "list") {
            listTasks(tasks);
        }
        else if (command == "done") {
            int index;
            cout << "Nomor tugas selesai: ";
            cin >> index;
            if (index >= 1 && index <= tasks.size()) {
                if (tasks[index - 1].substr(0, 3) == "[ ]") {
                    tasks[index - 1].replace(0, 3, "[x]");
                    saveTasks(tasks);
                } else {
                    cout << "Tugas sudah ditandai selesai.\n";
                }
            } else {
                cout << "Nomor tidak valid.\n";
            }
        }
        else if (command == "exit") {
            break;
        }
        else {
            cout << "Perintah tidak dikenal.\n";
        }
    }

    return 0;
}
